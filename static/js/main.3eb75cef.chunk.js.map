{"version":3,"sources":["TopBar.js","ListCard.js","AddItemPrompt.js","theme.js","App.js","index.js"],"names":["TopBar","setItems","selected","setSelected","deleteItem","setShowingAddItem","useState","anchorEl","setAnchorEl","handleClose","clearSelected","hasSelections","length","AppBar","position","Toolbar","Typography","variant","style","flex","IconButton","color","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","oldList","sort","a","b","forEach","item","disabled","useStyles","makeStyles","listItemDisplay","display","deleteItemButton","ListCard","items","classes","toDelete","prevItems","filter","prevSelects","List","map","ListItem","key","className","divider","Checkbox","checked","includes","onChange","i","indexOf","pop","handleCheck","ListItemSecondaryAction","AddItemPrompt","showing","setShowing","inputErr","setInputErr","errText","setErrText","inputRef","useRef","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","error","helperText","DialogActions","Button","enteredNum","Number","parseInt","current","value","console","log","isNaN","oldItems","onSubmit","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","App","unfold","n","showingAddItem","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eb75cef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { AppBar, Toolbar, IconButton, Typography, Menu, MenuItem } from \"@material-ui/core\";\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst TopBar = ({setItems, selected, setSelected, deleteItem, setShowingAddItem}) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const sortAsc = () => {\r\n    setItems(oldList => {\r\n      oldList.sort((a, b) => a - b);\r\n      return [...oldList];\r\n    })\r\n  }\r\n\r\n  const sortDec = () => {\r\n    setItems(oldList => {\r\n      oldList.sort((a, b) => b - a);\r\n      return [...oldList];\r\n    })\r\n  }\r\n\r\n  const clearSelected = () => {\r\n    setSelected([]);\r\n  }\r\n\r\n  const deleteSelected = () => {\r\n    selected.forEach(item => {\r\n      deleteItem(item);\r\n    });\r\n    clearSelected();\r\n  }\r\n\r\n  const hasSelections = !(selected.length === 0);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" style={{flex: 1}}>\r\n          Nombres {hasSelections && `(${selected.length})`}\r\n        </Typography>\r\n        {hasSelections && \r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={clearSelected}>\r\n          <IndeterminateCheckBoxIcon />\r\n        </IconButton>}\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={handleClick}>\r\n          <SortIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}>\r\n          <MenuItem onClick={() => {\r\n            sortAsc();\r\n            handleClose();\r\n          }}>Ascending</MenuItem>\r\n          <MenuItem onClick={() => {\r\n            sortDec();\r\n            handleClose();\r\n          }}>Descending</MenuItem>\r\n        </Menu>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={deleteSelected}\r\n          disabled={!hasSelections}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={setShowingAddItem}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopBar;","import React, { useState } from \"react\";\r\n\r\nimport { Toolbar, List, ListItem, Checkbox, IconButton } from \"@material-ui/core\";\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TopBar from \"./TopBar\";\r\n\r\nconst useStyles = makeStyles({\r\n  listItemDisplay: {\r\n    \"&:hover + $deleteItemButton\": {\r\n      display: \"block\",\r\n    }\r\n  },\r\n  deleteItemButton: {\r\n    display: \"none\",\r\n    \"&:hover\": {\r\n      display: \"block\",\r\n    }\r\n  },\r\n});\r\n\r\nconst ListCard = ({items, setItems, setShowingAddItem}) => {\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const handleCheck = item => {\r\n    setSelected(prevSelects => {\r\n      const i = prevSelects.indexOf(item);\r\n      // if item is not already selected\r\n      if (i === -1) {\r\n        // add item\r\n        return [...prevSelects, item];\r\n      } else {\r\n        // remove item\r\n        prevSelects[i] = prevSelects[prevSelects.length - 1];\r\n        prevSelects.pop();\r\n      }\r\n      return [...prevSelects];\r\n    });\r\n  };\r\n\r\n  const deleteItem = toDelete => {\r\n    setItems(prevItems => {\r\n      return prevItems.filter(item => toDelete !== item);\r\n    })\r\n    setSelected(prevSelects => {\r\n      return prevSelects.filter(item => toDelete !== item);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TopBar\r\n        setItems={setItems}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        deleteItem={deleteItem}\r\n        setShowingAddItem={setShowingAddItem} />\r\n      <Toolbar />\r\n      <List>\r\n        {items.map(item => (\r\n          <ListItem\r\n            key={item}\r\n            className={classes.listItemDisplay}\r\n            divider>\r\n            <Checkbox\r\n              checked={selected.includes(item)}\r\n              onChange={() => handleCheck(item)}\r\n              color=\"primary\"/>\r\n            <span>{item}</span>\r\n            <ListItemSecondaryAction className={classes.deleteItemButton}>\r\n              <IconButton>\r\n                  <ClearIcon onClick={() => deleteItem(item)} />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCard;","import React, { useState, useRef } from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst AddItemPrompt = ({ showing, setShowing, items, setItems }) => {\r\n  const [inputErr, setInputErr] = useState(false);\r\n  const [errText, setErrText] = useState(\"\");\r\n  const inputRef = useRef();\r\n\r\n  const onSubmit = () => {\r\n    let enteredNum = -1;\r\n    try {\r\n      enteredNum = Number.parseInt(inputRef.current.value);\r\n    } catch (error) {\r\n      setInputErr(true);  \r\n      setErrText(\"input is not a number\");\r\n      console.log(\"HERE\");\r\n      return 0;\r\n    }\r\n    console.log(enteredNum);\r\n    if (!Number.isNaN(enteredNum)) {\r\n      if (enteredNum >= 0 && enteredNum <= 9999) {\r\n        const i = items.indexOf(enteredNum);\r\n        if (i === -1) { // if enteredNum is not in items\r\n          setItems(oldItems => [...oldItems, enteredNum]);\r\n          // sortListByGivenFilter()\r\n          setInputErr(false);\r\n          setErrText(\"\");\r\n          setShowing(false);\r\n        } else {\r\n          setInputErr(true);\r\n          setErrText(\"entered number is already in list\");\r\n        }\r\n      } else {\r\n        setInputErr(true);\r\n        setErrText(\"entered number is not between 1 and 9999\");\r\n      }\r\n    } else {\r\n      setInputErr(true);  \r\n      setErrText(\"input is not a number\");\r\n      console.log(\"HERE\");\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={showing}>\r\n      <DialogTitle>Add a Number</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          A number can be between 0 and 9999\r\n        </DialogContentText>\r\n        <TextField \r\n        autoFocus\r\n        inputRef={inputRef} \r\n        error={inputErr}\r\n        helperText={errText}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            setShowing(false);\r\n            setInputErr(false);\r\n            setErrText(\"\");\r\n          }}\r\n          color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            onSubmit();\r\n          }}\r\n          color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddItemPrompt;","import { red } from \"@material-ui/core/colors\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#556cd6\",\r\n    },\r\n    secondary: {\r\n      main: \"#19857b\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useState } from \"react\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport { unfold } from \"ramda\";\r\n\r\nimport ListCard from \"./ListCard\";\r\nimport AddItemPrompt from \"./AddItemPrompt\";\r\nimport theme from \"./theme\";\r\n\r\nconst App = () => {\r\n  const [items, setItems] = useState(() =>\r\n    unfold((n) => (n > 40 ? false : [n, n + 1]), 0)\r\n  );\r\n  const [showingAddItem, setShowingAddItem] = useState(false);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <ListCard items={items} setItems={setItems} setShowingAddItem={setShowingAddItem} />\r\n      <AddItemPrompt showing={showingAddItem} setShowing={setShowingAddItem} items={items} setItems={setItems} />\r\n    </ThemeProvider>\r\n  )\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}